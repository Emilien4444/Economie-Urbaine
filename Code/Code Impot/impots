# Importe les biblios
import requests
import os
import zipfile
import json
import pandas as pd
import geopandas as gpd
from shapely.geometry import Point
pd.set_option('display.max_columns', 500)
pd.set_option('display.max_rows', 500)
#import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.cm as cm

#plt.style.use('seaborn')

# Charger les données sur les revenus fiscaux des communes
df_impot_2021 = pd.read_excel("C:/Users/TF-ST/Documents/Flavie/Projet Eco Urbaine/ircom_communes_complet_revenus_2020.xlsx", skiprows=7)

# Renommer les colonnes avec des noms significatifs
df_impot_2021.columns = ['Colonne_{}'.format(i) for i in range(len(df_impot_2021.columns))]

# Sélectionner la ligne "Total" pour chaque commune
villes_plus_riches = df_impot_2021[df_impot_2021['Colonne_4'] == 'Total']

# Remplacer les valeurs 'n.c.' par NaN dans la colonne Colonne_6
villes_plus_riches['Colonne_6'] = villes_plus_riches['Colonne_6'].replace('n.c.', np.nan)

# Convertir les valeurs de la colonne en nombres flottants
villes_plus_riches['Colonne_6'] = villes_plus_riches['Colonne_6'].astype(float)

# Trier les villes par revenu fiscal de référence des foyers fiscaux (Colonne_6)
villes_plus_riches = villes_plus_riches.sort_values(by='Colonne_6', ascending=False)

# Afficher les 20 premières villes les plus riches
print("Les 20 premières villes les plus riches :")
print(villes_plus_riches[['Colonne_3', 'Colonne_6']].head(20))

# Charger les données sur les contours des communes françaises
communes_shapefile = "C:/Users/TF-ST/Documents/Flavie/Projet Eco Urbaine/COMMUNE.shp"
communes_gdf = gpd.read_file(communes_shapefile)

# Charger les données des arrondissements
arrondissements_gdf = gpd.read_file("C:/Users/TF-ST/Documents/Flavie/Projet Eco Urbaine/arrondissements.shp")

# Projeter les arrondissements dans le CRS des communes
arrondissements_gdf = arrondissements_gdf.to_crs(communes_gdf.crs)

# Effectuer l'intersection
merged_gdf = gpd.overlay(arrondissements_gdf, communes_gdf, how='intersection')


# Fusionner les données des revenus fiscaux avec les contours des communes
total_impot_2021_gdf = communes_gdf.merge(villes_plus_riches, how='inner', left_on='NOM', right_on='Colonne_3')

# Afficher la carte des communes avec une couleur de base 
fig, ax = plt.subplots(figsize=(10, 10)) 
ax.set_aspect('equal') 
ax.set_axis_off()
communes_gdf.plot(ax=ax, color='lightgrey', edgecolor='black') 

# Ajouter les données d'impôts avec une coloration basée sur le montant total des impôts 
total_impot_2021_gdf.plot(ax=ax, column='Colonne_6', cmap='viridis', legend=True) 

# Ajouter un titre à la carte 
plt.title('Revenu fiscal de référence des foyers fiscaux par commune (2021)', fontsize=16) 

# Afficher la carte avec la possibilité de zoomer 
plt.show()
